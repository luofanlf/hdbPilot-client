# Project-wide Gradle settings.
# IDE (e.g. Android Studio) users:
# Gradle settings configured through the IDE *will override*
# any settings specified in this file.
# For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html

# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8

# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects. More details, visit
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
org.gradle.parallel=true

# AndroidX package structure to make it clearer which packages are bundled with the
# Android operating system, and which are packaged with your app's APK
# https://developer.android.com/topic/libraries/support-library/androidx-rn
android.useAndroidX=true

# Kotlin code style for this project: "official" or "obsolete":
kotlin.code.style=official

# Enables namespacing of each library's R class so that its R class includes only the
# resources declared in the library itself and none from the library's dependencies,
# thereby reducing the size of the R class for that library
android.nonTransitiveRClass=true

# CI/CD 优化配置
# 禁用Gradle Daemon（在CI环境中）
org.gradle.daemon=false

# 设置最大工作进程数
org.gradle.workers.max=2

# 启用构建缓存
org.gradle.caching=true

# 启用配置缓存
org.gradle.configuration-cache=true

# 设置JVM内存
org.gradle.jvmargs=-Xmx4096m -XX:MaxMetaspaceSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8

# ===== CI/CD 性能优化配置 =====

# 网络优化
org.gradle.internal.http.connectionTimeout=180000
org.gradle.internal.http.socketTimeout=180000

# 编译优化
android.enableJetifier=false
android.enableR8.fullMode=false
android.enableBuildCache=true

# Kotlin 编译优化
kotlin.incremental=true
kotlin.incremental.useClasspathSnapshot=true
kotlin.caching.enabled=true
kotlin.parallel.tasks.in.project=true

# 依赖解析优化
org.gradle.dependency.verification=lenient
org.gradle.unsafe.configuration-cache=true

# 构建扫描优化（可选，用于分析构建性能）
org.gradle.scan.acceptLicense=true
org.gradle.scan.captureGoalInputFiles=true

# 本地开发环境优化（CI中会被覆盖）
org.gradle.offline=false